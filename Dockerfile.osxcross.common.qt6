FROM ubuntu:latest as intermediate
ENTRYPOINT ["/bin/bash"]

# RUN echo 'Acquire::http { Proxy "http://192.168.1.2:3142"; };' >> /etc/apt/apt.conf.d/00proxy

RUN \
    export DEBIAN_FRONTEND=noninteractive && \
    apt -y update && \
    apt -y upgrade && \
    apt -y install \
        bash locales cpio \
        autoconf autoconf-archive automake autopoint bison build-essential bzip2 libbz2-dev flex \
        clang clang-tools libclang-dev cmake gettext git gperf intltool iputils-ping libc6-dev-i386 \
        libffi-dev libgdk-pixbuf2.0-dev libltdl-dev libssl-dev libtool-bin \
        libxml-parser-perl lzip make nano openssl p7zip-full patch perl \
        pkg-config ruby scons sed unzip wget xz-utils libgl-dev meson ninja-build \
        python3 python3-mako python3-pkg-resources python3-setuptools python-is-python3 \
        python3-html5lib gettext nodejs libreadline-dev \
        libcups2-dev libxkbcommon-dev libnss3-dev libdbus-1-dev libdrm-dev \
        && \
    apt -y autoremove && \
    apt -y autoclean && \
    apt -y clean && \
    apt -y update && \
    exit 0

    #rm -rf /var/lib/apt/lists/* &&

ENV LANG C.UTF-8
ENV LC_ALL C.UTF-8

RUN \
    cd /opt && \
    git clone https://github.com/tpoechtrager/osxcross.git && \
    exit 0

# must be done after git clone
#RUN --mount=type=bind,target=/opt/osxcross/SDKs,source=SDKs
COPY SDKs/*.tar.xz /opt/osxcross/tarballs/

# extract SDKs from dmg
#RUN --mount=type=bind,target=/opt/osxcross/DMGs,source=DMGs
COPY DMGs /opt/osxcross/DMGs

COPY extractDMG_SDKs.sh /opt/osxcross/extractDMG_SDKs.sh

# build osxcross
# default to build on the latest SDK
ENV MACOSX_DEPLOYMENT_TARGET=10.9
RUN \
    cd /opt/osxcross && \
    chmod +x /opt/osxcross/extractDMG_SDKs.sh && \
    ./extractDMG_SDKs.sh && \
    UNATTENDED=1 SDK_VERSION=$( \
        ls /opt/osxcross/tarballs | \
        sort -nr -t X -k 2 | \
        sed -e "s/^\s*MacOSX\(.*\)\.sdk.*/\1/" | \
        awk 'NR==1' \
        ) OSX_VERSION_MIN=$MACOSX_DEPLOYMENT_TARGET ./build.sh && \
    rm -rf tarballs/* && \
    exit 0

ENV PATH="${PATH}:/opt/osxcross/target/bin"
RUN echo "export PATH=${PATH}:/opt/osxcross/target/bin" >> /root/.bashrc && \
    exit 0

COPY cross /opt/osxcross/cross

RUN cd /opt/osxcross/cross && chmod ug+x *.sh && exit 0

# set architecture
#RUN cd /opt/osxcross/cross/ && \
#    ./config-set.sh -a --**REPLACE**-- && \
#    exit 0
RUN cd /opt/osxcross/cross/ && \
    ./config-set.sh -a x86_64-apple && \
    . ~/.bashrc \
    exit 0

    # select sdk by ./config-set.sh -s sdk
    #  ie select-set.sh -s macosx12.1 -a arm64-apple

# force these from here
#**PACKAGES_INSERT_HERE**

# make sure we didn't forget anything, build custom libs
RUN /opt/osxcross/cross/buildBase.sh && exit 0

# create qt
RUN /opt/osxcross/cross/make-qt6.sh && exit 0

# add qt host tools to path
ENV PATH="/opt/osxcross/cross/host/bin:/opt/osxcross/cross/host/qt6/bin:$PATH"

# compile for arm64
RUN cd /opt/osxcross/cross/ && \
    ./config-set.sh -a arm64-apple && \
    . ~/.bashrc \
    exit 0
# cleanup old build
RUN /opt/osxcross/cross/buildBase.sh -St -c -a && exit 0

# force these from here
#**PACKAGES_INSERT_HERE**

# make sure we didn't forget anything, build custom libs
RUN /opt/osxcross/cross/buildBase.sh && exit 0

# create qt
RUN /opt/osxcross/cross/make-qt6.sh && exit 0


# cleanup
RUN cd /opt/osxcross/cross && rm -Rf src pkg && \
    cd /opt/osxcross/ && rm -Rf tarballs/* DMGs/* exit 0
